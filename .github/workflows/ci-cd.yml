name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  # Job 1: Run tests and linting
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install root dependencies
      run: npm install
      
    - name: Install server dependencies
      run: cd server && npm install
      
    - name: Install client dependencies
      run: cd client && npm install
      
    - name: Lint client code
      run: cd client && npm run lint
      
    - name: Build client
      run: cd client && npm run build
      
    - name: Test server health endpoint
      run: |
        cd server
        npm start &
        sleep 10
        curl -f http://localhost:5000/health || exit 1
        pkill -f "node server.js"

  # Job 2: Build and deploy backend (only on push to main)
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Render
      run: |
        echo "Backend deployment triggered"
        echo "Render will automatically deploy from GitHub when main branch is updated"
        
  # Job 3: Build and deploy frontend (only on push to main)
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install client dependencies
      run: cd client && npm install
      
    - name: Build client
      run: cd client && npm run build
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
        VITE_SOCKET_URL: ${{ secrets.VITE_SOCKET_URL }}
        
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./client
        vercel-args: '--prod'

  # Job 4: Security scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run npm audit
      run: |
        cd server && npm audit --audit-level high
        cd ../client && npm audit --audit-level high
      continue-on-error: true
